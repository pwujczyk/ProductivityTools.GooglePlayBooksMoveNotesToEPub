function getSrverUrl() {
  return "https://apijournal.productivitytools.top:8022/api/"
}
function getCustomToken() {
  console.log("GetCustomToken")
  var url = getSrverUrl() + 'CustomToken/PublishBookNotes'

  var response = UrlFetchApp.fetch(url);
  var customToken = response.getContentText();
  Logger.log(customToken);
  return customToken;
  Logger.log(response);
}

function GetIdToken(customToken)
{
  Logger.log("Hello GetIdToken")
  var webApiKey=PropertiesService.getScriptProperties().getProperty("webapikey");
  var url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithCustomToken?key='+webApiKey;

  var data = {
  'token': customToken,
  'returnSecureToken': true,
  };
  var options = {
    'method' : 'post',
    'contentType': 'application/json',
    // Convert the JavaScript object to a JSON string.
    'payload' : JSON.stringify(data)
  };
  var response=UrlFetchApp.fetch(url, options);
  var idKeyObject=response.getContentText()
  var idKey=JSON.parse(idKeyObject).idToken
  console.log(idKey);
  return idKey
}


function callApi(bookName, subject, paragraph) {
  
  var customToken = getCustomToken();
  var idKey=GetIdToken(customToken)
  CreateJournal(bookName, subject, paragraph, idKey);
}

function CreateJournal(bookName, subject, paragraph, idKey) {
  Logger.log(idKey);

  
  var url = getSrverUrl() + 'Book/SaveBookJournal'

  //var parentId=PropertiesService.getScriptProperties().getProperty("ParentId");
  var bearer = "Bearer " + idKey;
  var data = {
    "ParentJournalId": 2636,
    "JournalName": bookName, "email": "pwujczyk@gmail.com", "Page": { "Content": paragraph, "subject": subject, 'ContentType': 'Slate' }
  }
  var options = {
    'method': 'post',
    'contentType': 'application/json',
    // 'headers':{
    //   'authorization':bearer
    //  },
    'payload': JSON.stringify(data)
  };

  Logger.log(url);
  Logger.log(options);

  var response = UrlFetchApp.fetch(url, options);
  var responseText = response.getContentText()
  Logger.log(responseText);
  return responseText;
}

function pushParagraphsToJournalApi(bookName, paragraphs) {
  for (var i = 0; i < paragraphs.length; i++) {
    console.log(paragraphs[i]);
    CreateJournal(bookName, paragraphs[i])
  }
}

//'[{"type":"title","children":[{"text":"Glaskologia"}]},{"type":"ul","children":[{"type":"li","children":[{"type":"lic","children":[{"text":"Punkt21"}]}]}]}]'

function getOpening(chapterName) {
  return '[{"type":"title","children":[{"text":"' + chapterName + '"}]}';//,{"type":"ul","children":[{"type":"li","children":[{"type":"lic","children":[{"text":"Punkt21"}]}]}]}
  //]'
}

function getClosing() {
  return ']'
}


function processDokument(id) {
  var doc = DocumentApp.openById(id);
  var body = doc.getBody().getText();
  var x = doc.getHeader();
  var name = doc.getName();
  if (name.includes("Notatki")) {
    var startPosition = name.indexOf("â€ž")
    var bookName = name.substring(startPosition + 1, name.length - 1)
  }
  else {
    var startPosition = name.indexOf("\"")
    var bookName = name.substring(startPosition + 1, name.length - 1)

  }

  var paragraphs = doc.getParagraphs();
  var resultParagraphts = []
  var resultString = "";
  var subject = "";
  for (var i = 1; i < paragraphs.length; i++) {
    var paragraphText = paragraphs[i].getText();
    var paragraphAtributes = paragraphs[i].getAttributes();
    //console.log(z.BACKGROUND_COLOR)
    if (paragraphAtributes.FONT_SIZE == 16 && paragraphText != "" && resultString != "") {
      console.log("Publishing the chapter")
      resultString += getClosing();
      callApi(bookName, subject, resultString)
      resultString = ""
    }

    if (paragraphAtributes.FONT_SIZE == 16 && resultString == "") {
      subject = paragraphText;
      resultString = getOpening(subject);
    }

    if (paragraphAtributes.BACKGROUND_COLOR == "#fde096" && paragraphText != "") {
      //console.log(x);
      //console.log(z.BACKGROUND_COLOR)
      resultParagraphts.push(paragraphText);

      resultString += ',{"type":"ul","children":[{"type":"li","children":[{"type":"lic","children":[{"text":"' + paragraphText + '"}]}]}]}';

    }
  }
  //CreateJournal(bookName,resultString)
  //pushParagraphsToJournalApi(bookName,resultString);

}

function processDirectory() {
  var folders = DriveApp.getFoldersByName("Book notes").next();
  var files = folders.getFiles()
  while (files.hasNext()) {
    file = files.next();
    name = file.getName();
    console.log(name);
    processDokument(file.getId());
  }


}

function myFunction() {
  processDirectory();
}
